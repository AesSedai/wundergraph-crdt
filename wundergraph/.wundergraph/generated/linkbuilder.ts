// Code generated by wunderctl. DO NOT EDIT.

export interface LinkDefinition {
	targetType: string;
	targetFieldName: string;
	sourceField: string;
	argumentSources: LinkFieldArgumentSourceDefinition[];
}

export interface LinkFieldArgumentSourceDefinition {
	name: string;
	type: "objectField" | "fieldArgument";
	path: string[];
}

class LinkBuilder<T, R extends {} = {}, TT = {}> {
	// @ts-ignore
	constructor(current: R = {}, sourceField: string, targetType: string, targetField: string) {
		this.current = current;
		this.sourceField = sourceField;
		this.targetType = targetType;
		this.targetField = targetField;
	}

	private readonly sourceField: string;
	private readonly targetType: string;
	private readonly targetField: string;

	// @ts-ignore
	private current: R = {};

	argument<P extends Exclude<keyof T, keyof R>, V extends T[P], S extends "fieldArgument" | "objectField">(
		key: P,
		source: S,
		value: S extends "fieldArgument" ? string : TT,
		...extraPath: string[]
	) {
		const extra: {} = { [key]: { source, path: [value, ...extraPath] } };

		const instance = {
			...(this.current as object),
			...extra,
		} as R & Pick<T, P>;

		return new LinkBuilder<T, R & Pick<T, P>, TT>(instance, this.sourceField, this.targetType, this.targetField);
	}

	build = (): LinkDefinition => {
		const args = this.current as { [key: string]: { path: string[]; source: "fieldArgument" | "objectField" } };
		return {
			argumentSources: Object.keys(args).map((key) => ({
				name: key,
				type: args[key].source,
				path: args[key].path,
			})),
			targetType: this.targetType,
			sourceField: this.sourceField,
			targetFieldName: this.targetField,
		};
	};
}

export const sourceStep = <T extends {}, R extends {}>() => ({
	source: <F extends keyof T>(field: F) => {
		return targetStep<T, F, R>(field);
	},
});

const targetStep = <T, F extends keyof T, R>(field: F) => ({
	target: <r extends keyof R>(targetType: r, targetField: string) => {
		return new LinkBuilder<T[F], {}, R[r]>({}, field as string, targetType as string, targetField);
	},
});

interface TargetTypes {
	hasura_authors: "books" | "books_aggregate" | "created_at" | "id" | "name" | "updated_at" | "_join";
	hasura_authors_aggregate: "aggregate" | "nodes" | "_join";
	hasura_authors_aggregate_fields: "count" | "max" | "min" | "_join";
	hasura_authors_max_fields: "created_at" | "id" | "name" | "updated_at" | "_join";
	hasura_authors_min_fields: "created_at" | "id" | "name" | "updated_at" | "_join";
	hasura_authors_mutation_response: "affected_rows" | "returning" | "_join";
	hasura_books:
		| "author"
		| "author_id"
		| "created_at"
		| "id"
		| "isbn"
		| "published_at"
		| "title"
		| "updated_at"
		| "_join";
	hasura_books_aggregate: "aggregate" | "nodes" | "_join";
	hasura_books_aggregate_fields: "count" | "max" | "min" | "_join";
	hasura_books_max_fields:
		| "author_id"
		| "created_at"
		| "id"
		| "isbn"
		| "published_at"
		| "title"
		| "updated_at"
		| "_join";
	hasura_books_min_fields:
		| "author_id"
		| "created_at"
		| "id"
		| "isbn"
		| "published_at"
		| "title"
		| "updated_at"
		| "_join";
	hasura_books_mutation_response: "affected_rows" | "returning" | "_join";
	hasura_clients: "client" | "crdt" | "crdt_id" | "created_at" | "guid" | "id" | "updated_at" | "vector" | "_join";
	hasura_clients_aggregate: "aggregate" | "nodes" | "_join";
	hasura_clients_aggregate_fields: "count" | "max" | "min" | "_join";
	hasura_clients_max_fields: "client" | "crdt_id" | "created_at" | "guid" | "id" | "updated_at" | "vector" | "_join";
	hasura_clients_min_fields: "client" | "crdt_id" | "created_at" | "guid" | "id" | "updated_at" | "vector" | "_join";
	hasura_clients_mutation_response: "affected_rows" | "returning" | "_join";
	hasura_crdt:
		| "client"
		| "clients"
		| "clients_aggregate"
		| "created_at"
		| "guid"
		| "id"
		| "room"
		| "state"
		| "updated_at"
		| "vector"
		| "_join";
	hasura_crdt_aggregate: "aggregate" | "nodes" | "_join";
	hasura_crdt_aggregate_fields: "count" | "max" | "min" | "_join";
	hasura_crdt_max_fields:
		| "client"
		| "created_at"
		| "guid"
		| "id"
		| "room"
		| "state"
		| "updated_at"
		| "vector"
		| "_join";
	hasura_crdt_min_fields:
		| "client"
		| "created_at"
		| "guid"
		| "id"
		| "room"
		| "state"
		| "updated_at"
		| "vector"
		| "_join";
	hasura_crdt_mutation_response: "affected_rows" | "returning" | "_join";
	hasura_knex_migrations: "batch" | "id" | "migration_time" | "name" | "_join";
	hasura_knex_migrations_aggregate: "aggregate" | "nodes" | "_join";
	hasura_knex_migrations_aggregate_fields:
		| "avg"
		| "count"
		| "max"
		| "min"
		| "stddev"
		| "stddev_pop"
		| "stddev_samp"
		| "sum"
		| "var_pop"
		| "var_samp"
		| "variance"
		| "_join";
	hasura_knex_migrations_avg_fields: "batch" | "id" | "_join";
	hasura_knex_migrations_max_fields: "batch" | "id" | "migration_time" | "name" | "_join";
	hasura_knex_migrations_min_fields: "batch" | "id" | "migration_time" | "name" | "_join";
	hasura_knex_migrations_mutation_response: "affected_rows" | "returning" | "_join";
	hasura_knex_migrations_stddev_fields: "batch" | "id" | "_join";
	hasura_knex_migrations_stddev_pop_fields: "batch" | "id" | "_join";
	hasura_knex_migrations_stddev_samp_fields: "batch" | "id" | "_join";
	hasura_knex_migrations_sum_fields: "batch" | "id" | "_join";
	hasura_knex_migrations_var_pop_fields: "batch" | "id" | "_join";
	hasura_knex_migrations_var_samp_fields: "batch" | "id" | "_join";
	hasura_knex_migrations_variance_fields: "batch" | "id" | "_join";
}

interface SourceFields {
	hasura_authors: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_authors_aggregate: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_authors_by_pk: {
		id: null;
	};
	hasura_books: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_books_aggregate: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_books_by_pk: {
		id: null;
	};
	hasura_clients: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_clients_aggregate: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_clients_by_pk: {
		id: null;
	};
	hasura_crdt: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_crdt_aggregate: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_crdt_by_pk: {
		id: null;
	};
	hasura_knex_migrations: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_knex_migrations_aggregate: {
		distinct_on: null;
		limit: null;
		offset: null;
		order_by: null;
		where: null;
	};
	hasura_knex_migrations_by_pk: {
		id: null;
	};
	public_hello: {};
}

const linkBuilder = sourceStep<SourceFields, TargetTypes>();
export default linkBuilder;
