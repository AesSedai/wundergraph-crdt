// Code generated by wunderctl. DO NOT EDIT.

// @ts-ignore: no-types available
import { JSONSchema7 } from "json-schema";

interface Schema {
	CrdtAuthors: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	CreateBook: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	CreateCrdt: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	DeleteBook: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	QueryCrdt: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	QueryGetAuthors: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	QueryGetBooks: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	ResetAuthors: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	SeedAuthors: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	SubscribeAuthors: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	SubscribeBooks: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UpdateAuthorName: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UpdateBook: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UpdateCrdt: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UpsertCrdt: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
}

const jsonSchema: Schema = {
	CrdtAuthors: {
		input: {
			type: "object",
			properties: { limit: { type: "integer" }, sv: { type: "string" }, initialSync: { type: "boolean" } },
			additionalProperties: false,
			definitions: {},
			required: ["limit", "sv"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_authors: {
							type: "array",
							items: {
								type: "object",
								properties: {
									__typename: { type: "string", enum: ["hasura_authors"] },
									id: { type: "string" },
									name: { type: "string" },
									updated_at: { type: "string" },
									books: {
										type: "array",
										items: {
											type: "object",
											properties: {
												__typename: { type: "string", enum: ["hasura_books"] },
												id: { type: "string" },
												title: { type: "string" },
												isbn: { type: "string" },
												updated_at: { type: "string" },
											},
											additionalProperties: false,
											required: ["__typename", "id", "updated_at"],
										},
									},
								},
								additionalProperties: false,
								required: ["__typename", "id", "updated_at", "books"],
							},
						},
					},
					additionalProperties: false,
					required: ["hasura_authors"],
				},
			},
			additionalProperties: false,
		},
	},
	CreateBook: {
		input: {
			type: "object",
			properties: { book: { $ref: "#/definitions/hasura_books_insert_input" } },
			additionalProperties: false,
			definitions: {
				hasura_books_insert_input: {
					additionalProperties: false,
					type: "object",
					properties: {
						author: { $ref: "#/definitions/hasura_authors_obj_rel_insert_input" },
						author_id: { type: ["string", "null"] },
						created_at: { type: ["string", "null"] },
						id: { type: ["string", "null"] },
						isbn: { type: ["string", "null"] },
						published_at: { type: ["string", "null"] },
						title: { type: ["string", "null"] },
						updated_at: { type: ["string", "null"] },
					},
				},
				hasura_authors_obj_rel_insert_input: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/hasura_authors_insert_input" },
						on_conflict: { $ref: "#/definitions/hasura_authors_on_conflict" },
					},
				},
				hasura_authors_insert_input: {
					additionalProperties: false,
					type: "object",
					properties: {
						books: { $ref: "#/definitions/hasura_books_arr_rel_insert_input" },
						created_at: { type: ["string", "null"] },
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						updated_at: { type: ["string", "null"] },
					},
				},
				hasura_books_arr_rel_insert_input: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { type: "array", minItems: 1, items: { $ref: "#/definitions/hasura_books_insert_input" } },
						on_conflict: { $ref: "#/definitions/hasura_books_on_conflict" },
					},
				},
				hasura_books_on_conflict: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						constraint: { type: "string", enum: ["books_pkey"] },
						update_columns: {
							type: ["array", "null"],
							items: {
								type: "string",
								enum: ["author_id", "created_at", "id", "isbn", "published_at", "title", "updated_at"],
							},
						},
						where: { $ref: "#/definitions/hasura_books_bool_exp" },
					},
				},
				hasura_books_bool_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_and: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_books_bool_exp" } },
						_not: { $ref: "#/definitions/hasura_books_bool_exp" },
						_or: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_books_bool_exp" } },
						author: { $ref: "#/definitions/hasura_authors_bool_exp" },
						author_id: { $ref: "#/definitions/hasura_String_comparison_exp" },
						created_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
						id: { $ref: "#/definitions/hasura_String_comparison_exp" },
						isbn: { $ref: "#/definitions/hasura_String_comparison_exp" },
						published_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
						title: { $ref: "#/definitions/hasura_String_comparison_exp" },
						updated_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
					},
				},
				hasura_authors_bool_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_and: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_authors_bool_exp" } },
						_not: { $ref: "#/definitions/hasura_authors_bool_exp" },
						_or: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_authors_bool_exp" } },
						books: { $ref: "#/definitions/hasura_books_bool_exp" },
						books_aggregate: { $ref: "#/definitions/hasura_books_aggregate_bool_exp" },
						created_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
						id: { $ref: "#/definitions/hasura_String_comparison_exp" },
						name: { $ref: "#/definitions/hasura_String_comparison_exp" },
						updated_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
					},
				},
				hasura_books_aggregate_bool_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { count: { $ref: "#/definitions/hasura_books_aggregate_bool_exp_count" } },
				},
				hasura_books_aggregate_bool_exp_count: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						arguments: {
							type: ["array", "null"],
							items: {
								type: "string",
								enum: ["author_id", "created_at", "id", "isbn", "published_at", "title", "updated_at"],
							},
						},
						distinct: { type: ["boolean", "null"] },
						filter: { $ref: "#/definitions/hasura_books_bool_exp" },
						predicate: { $ref: "#/definitions/hasura_Int_comparison_exp" },
					},
				},
				hasura_Int_comparison_exp: {
					additionalProperties: false,
					type: "object",
					properties: {
						_eq: { type: ["integer", "null"] },
						_gt: { type: ["integer", "null"] },
						_gte: { type: ["integer", "null"] },
						_in: { type: ["array", "null"], items: { type: "integer" } },
						_is_null: { type: ["boolean", "null"] },
						_lt: { type: ["integer", "null"] },
						_lte: { type: ["integer", "null"] },
						_neq: { type: ["integer", "null"] },
						_nin: { type: ["array", "null"], items: { type: "integer" } },
					},
				},
				hasura_timestamptz_comparison_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_eq: { type: ["string", "null"] },
						_gt: { type: ["string", "null"] },
						_gte: { type: ["string", "null"] },
						_in: { type: ["array", "null"], items: { type: "string" } },
						_is_null: { type: ["boolean", "null"] },
						_lt: { type: ["string", "null"] },
						_lte: { type: ["string", "null"] },
						_neq: { type: ["string", "null"] },
						_nin: { type: ["array", "null"], items: { type: "string" } },
					},
				},
				hasura_String_comparison_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_eq: { type: ["string", "null"] },
						_gt: { type: ["string", "null"] },
						_gte: { type: ["string", "null"] },
						_ilike: { type: ["string", "null"] },
						_in: { type: ["array", "null"], items: { type: "string" } },
						_iregex: { type: ["string", "null"] },
						_is_null: { type: ["boolean", "null"] },
						_like: { type: ["string", "null"] },
						_lt: { type: ["string", "null"] },
						_lte: { type: ["string", "null"] },
						_neq: { type: ["string", "null"] },
						_nilike: { type: ["string", "null"] },
						_nin: { type: ["array", "null"], items: { type: "string" } },
						_niregex: { type: ["string", "null"] },
						_nlike: { type: ["string", "null"] },
						_nregex: { type: ["string", "null"] },
						_nsimilar: { type: ["string", "null"] },
						_regex: { type: ["string", "null"] },
						_similar: { type: ["string", "null"] },
					},
				},
				hasura_authors_on_conflict: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						constraint: { type: "string", enum: ["authors_pkey"] },
						update_columns: {
							type: ["array", "null"],
							items: { type: "string", enum: ["created_at", "id", "name", "updated_at"] },
						},
						where: { $ref: "#/definitions/hasura_authors_bool_exp" },
					},
				},
			},
			required: ["book"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_insert_books_one: {
							type: "object",
							properties: { id: { type: "string" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	CreateCrdt: {
		input: {
			type: "object",
			properties: { crdt: { $ref: "#/definitions/hasura_crdt_insert_input" } },
			additionalProperties: false,
			definitions: {
				hasura_crdt_insert_input: {
					additionalProperties: false,
					type: "object",
					properties: {
						client: { type: ["string", "null"] },
						created_at: { type: ["string", "null"] },
						id: { type: ["string", "null"] },
						state: { type: ["string", "null"] },
						updated_at: { type: ["string", "null"] },
						vector: { type: ["string", "null"] },
					},
				},
			},
			required: ["crdt"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_insert_crdt_one: {
							type: "object",
							properties: {
								id: { type: "string" },
								client: { type: "string" },
								state: { type: "string" },
								vector: { type: "string" },
							},
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	DeleteBook: {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["id"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_delete_books_by_pk: {
							type: "object",
							properties: { id: { type: "string" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	QueryCrdt: {
		input: {
			type: "object",
			properties: { client: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["client"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_crdt: {
							type: "array",
							items: {
								type: "object",
								properties: {
									id: { type: "string" },
									__typename: { type: "string", enum: ["hasura_crdt"] },
									client: { type: "string" },
									state: { type: "string" },
									vector: { type: "string" },
									created_at: { type: "string" },
									updated_at: { type: "string" },
								},
								additionalProperties: false,
								required: ["id", "__typename", "created_at", "updated_at"],
							},
						},
					},
					additionalProperties: false,
					required: ["hasura_crdt"],
				},
			},
			additionalProperties: false,
		},
	},
	QueryGetAuthors: {
		input: {
			type: "object",
			properties: { limit: { type: "integer" } },
			additionalProperties: false,
			definitions: {},
			required: ["limit"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_authors: {
							type: "array",
							items: {
								type: "object",
								properties: {
									__typename: { type: "string", enum: ["hasura_authors"] },
									id: { type: "string" },
									name: { type: "string" },
									updated_at: { type: "string" },
									books: {
										type: "array",
										items: {
											type: "object",
											properties: {
												__typename: { type: "string", enum: ["hasura_books"] },
												id: { type: "string" },
												title: { type: "string" },
												isbn: { type: "string" },
												updated_at: { type: "string" },
											},
											additionalProperties: false,
											required: ["__typename", "id", "updated_at"],
										},
									},
								},
								additionalProperties: false,
								required: ["__typename", "id", "updated_at", "books"],
							},
						},
					},
					additionalProperties: false,
					required: ["hasura_authors"],
				},
			},
			additionalProperties: false,
		},
	},
	QueryGetBooks: {
		input: {
			type: "object",
			properties: { limit: { type: "integer" } },
			additionalProperties: false,
			definitions: {},
			required: ["limit"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_books: {
							type: "array",
							items: {
								type: "object",
								properties: {
									__typename: { type: "string", enum: ["hasura_books"] },
									id: { type: "string" },
									title: { type: "string" },
									isbn: { type: "string" },
									updated_at: { type: "string" },
									author: {
										type: "object",
										properties: {
											__typename: { type: "string", enum: ["hasura_authors"] },
											id: { type: "string" },
											name: { type: "string" },
											updated_at: { type: "string" },
										},
										additionalProperties: false,
										required: ["__typename", "id", "updated_at"],
									},
								},
								additionalProperties: false,
								required: ["__typename", "id", "updated_at"],
							},
						},
					},
					additionalProperties: false,
					required: ["hasura_books"],
				},
			},
			additionalProperties: false,
		},
	},
	ResetAuthors: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_delete_authors: {
							type: "object",
							properties: { affected_rows: { type: "integer" } },
							additionalProperties: false,
							required: ["affected_rows"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	SeedAuthors: {
		input: {
			type: "object",
			properties: {
				authors: { type: "array", minItems: 1, items: { $ref: "#/definitions/hasura_authors_insert_input" } },
			},
			additionalProperties: false,
			definitions: {
				hasura_authors_insert_input: {
					additionalProperties: false,
					type: "object",
					properties: {
						books: { $ref: "#/definitions/hasura_books_arr_rel_insert_input" },
						created_at: { type: ["string", "null"] },
						id: { type: ["string", "null"] },
						name: { type: ["string", "null"] },
						updated_at: { type: ["string", "null"] },
					},
				},
				hasura_books_arr_rel_insert_input: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { type: "array", minItems: 1, items: { $ref: "#/definitions/hasura_books_insert_input" } },
						on_conflict: { $ref: "#/definitions/hasura_books_on_conflict" },
					},
				},
				hasura_books_insert_input: {
					additionalProperties: false,
					type: "object",
					properties: {
						author: { $ref: "#/definitions/hasura_authors_obj_rel_insert_input" },
						author_id: { type: ["string", "null"] },
						created_at: { type: ["string", "null"] },
						id: { type: ["string", "null"] },
						isbn: { type: ["string", "null"] },
						published_at: { type: ["string", "null"] },
						title: { type: ["string", "null"] },
						updated_at: { type: ["string", "null"] },
					},
				},
				hasura_authors_obj_rel_insert_input: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						data: { $ref: "#/definitions/hasura_authors_insert_input" },
						on_conflict: { $ref: "#/definitions/hasura_authors_on_conflict" },
					},
				},
				hasura_authors_on_conflict: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						constraint: { type: "string", enum: ["authors_pkey"] },
						update_columns: {
							type: ["array", "null"],
							items: { type: "string", enum: ["created_at", "id", "name", "updated_at"] },
						},
						where: { $ref: "#/definitions/hasura_authors_bool_exp" },
					},
				},
				hasura_authors_bool_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_and: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_authors_bool_exp" } },
						_not: { $ref: "#/definitions/hasura_authors_bool_exp" },
						_or: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_authors_bool_exp" } },
						books: { $ref: "#/definitions/hasura_books_bool_exp" },
						books_aggregate: { $ref: "#/definitions/hasura_books_aggregate_bool_exp" },
						created_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
						id: { $ref: "#/definitions/hasura_String_comparison_exp" },
						name: { $ref: "#/definitions/hasura_String_comparison_exp" },
						updated_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
					},
				},
				hasura_books_bool_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_and: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_books_bool_exp" } },
						_not: { $ref: "#/definitions/hasura_books_bool_exp" },
						_or: { type: ["array", "null"], items: { $ref: "#/definitions/hasura_books_bool_exp" } },
						author: { $ref: "#/definitions/hasura_authors_bool_exp" },
						author_id: { $ref: "#/definitions/hasura_String_comparison_exp" },
						created_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
						id: { $ref: "#/definitions/hasura_String_comparison_exp" },
						isbn: { $ref: "#/definitions/hasura_String_comparison_exp" },
						published_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
						title: { $ref: "#/definitions/hasura_String_comparison_exp" },
						updated_at: { $ref: "#/definitions/hasura_timestamptz_comparison_exp" },
					},
				},
				hasura_String_comparison_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_eq: { type: ["string", "null"] },
						_gt: { type: ["string", "null"] },
						_gte: { type: ["string", "null"] },
						_ilike: { type: ["string", "null"] },
						_in: { type: ["array", "null"], items: { type: "string" } },
						_iregex: { type: ["string", "null"] },
						_is_null: { type: ["boolean", "null"] },
						_like: { type: ["string", "null"] },
						_lt: { type: ["string", "null"] },
						_lte: { type: ["string", "null"] },
						_neq: { type: ["string", "null"] },
						_nilike: { type: ["string", "null"] },
						_nin: { type: ["array", "null"], items: { type: "string" } },
						_niregex: { type: ["string", "null"] },
						_nlike: { type: ["string", "null"] },
						_nregex: { type: ["string", "null"] },
						_nsimilar: { type: ["string", "null"] },
						_regex: { type: ["string", "null"] },
						_similar: { type: ["string", "null"] },
					},
				},
				hasura_timestamptz_comparison_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						_eq: { type: ["string", "null"] },
						_gt: { type: ["string", "null"] },
						_gte: { type: ["string", "null"] },
						_in: { type: ["array", "null"], items: { type: "string" } },
						_is_null: { type: ["boolean", "null"] },
						_lt: { type: ["string", "null"] },
						_lte: { type: ["string", "null"] },
						_neq: { type: ["string", "null"] },
						_nin: { type: ["array", "null"], items: { type: "string" } },
					},
				},
				hasura_books_aggregate_bool_exp: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: { count: { $ref: "#/definitions/hasura_books_aggregate_bool_exp_count" } },
				},
				hasura_books_aggregate_bool_exp_count: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						arguments: {
							type: ["array", "null"],
							items: {
								type: "string",
								enum: ["author_id", "created_at", "id", "isbn", "published_at", "title", "updated_at"],
							},
						},
						distinct: { type: ["boolean", "null"] },
						filter: { $ref: "#/definitions/hasura_books_bool_exp" },
						predicate: { $ref: "#/definitions/hasura_Int_comparison_exp" },
					},
				},
				hasura_Int_comparison_exp: {
					additionalProperties: false,
					type: "object",
					properties: {
						_eq: { type: ["integer", "null"] },
						_gt: { type: ["integer", "null"] },
						_gte: { type: ["integer", "null"] },
						_in: { type: ["array", "null"], items: { type: "integer" } },
						_is_null: { type: ["boolean", "null"] },
						_lt: { type: ["integer", "null"] },
						_lte: { type: ["integer", "null"] },
						_neq: { type: ["integer", "null"] },
						_nin: { type: ["array", "null"], items: { type: "integer" } },
					},
				},
				hasura_books_on_conflict: {
					additionalProperties: false,
					type: ["object", "null"],
					properties: {
						constraint: { type: "string", enum: ["books_pkey"] },
						update_columns: {
							type: ["array", "null"],
							items: {
								type: "string",
								enum: ["author_id", "created_at", "id", "isbn", "published_at", "title", "updated_at"],
							},
						},
						where: { $ref: "#/definitions/hasura_books_bool_exp" },
					},
				},
			},
			required: ["authors"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_insert_authors: {
							type: "object",
							properties: { affected_rows: { type: "integer" } },
							additionalProperties: false,
							required: ["affected_rows"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	SubscribeAuthors: {
		input: {
			type: "object",
			properties: { limit: { type: "integer" } },
			additionalProperties: false,
			definitions: {},
			required: ["limit"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_authors: {
							type: "array",
							items: {
								type: "object",
								properties: {
									__typename: { type: "string", enum: ["hasura_authors"] },
									id: { type: "string" },
									name: { type: "string" },
									updated_at: { type: "string" },
									books: {
										type: "array",
										items: {
											type: "object",
											properties: {
												__typename: { type: "string", enum: ["hasura_books"] },
												id: { type: "string" },
												title: { type: "string" },
												isbn: { type: "string" },
												updated_at: { type: "string" },
											},
											additionalProperties: false,
											required: ["__typename", "id", "updated_at"],
										},
									},
								},
								additionalProperties: false,
								required: ["__typename", "id", "updated_at", "books"],
							},
						},
					},
					additionalProperties: false,
					required: ["hasura_authors"],
				},
			},
			additionalProperties: false,
		},
	},
	SubscribeBooks: {
		input: {
			type: "object",
			properties: { limit: { type: "integer" } },
			additionalProperties: false,
			definitions: {},
			required: ["limit"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_books: {
							type: "array",
							items: {
								type: "object",
								properties: {
									__typename: { type: "string", enum: ["hasura_books"] },
									id: { type: "string" },
									title: { type: "string" },
									isbn: { type: "string" },
									updated_at: { type: "string" },
									author: {
										type: "object",
										properties: {
											__typename: { type: "string", enum: ["hasura_authors"] },
											id: { type: "string" },
											name: { type: "string" },
											updated_at: { type: "string" },
										},
										additionalProperties: false,
										required: ["__typename", "id", "updated_at"],
									},
								},
								additionalProperties: false,
								required: ["__typename", "id", "updated_at"],
							},
						},
					},
					additionalProperties: false,
					required: ["hasura_books"],
				},
			},
			additionalProperties: false,
		},
	},
	UpdateAuthorName: {
		input: {
			type: "object",
			properties: { id: { type: "string" }, name: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["id", "name"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_update_authors_by_pk: {
							type: "object",
							properties: { id: { type: "string" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UpdateBook: {
		input: {
			type: "object",
			properties: { id: { type: "string" }, title: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["id", "title"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_update_books_by_pk: {
							type: "object",
							properties: { id: { type: "string" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UpdateCrdt: {
		input: {
			type: "object",
			properties: { client: { type: "string" }, state: { type: "string" }, vector: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["client", "state", "vector"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_update_crdt: {
							type: "object",
							properties: {
								returning: {
									type: "array",
									items: {
										type: "object",
										properties: { id: { type: "string" } },
										additionalProperties: false,
										required: ["id"],
									},
								},
							},
							additionalProperties: false,
							required: ["returning"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UpsertCrdt: {
		input: {
			type: "object",
			properties: { crdt: { $ref: "#/definitions/hasura_crdt_insert_input" } },
			additionalProperties: false,
			definitions: {
				hasura_crdt_insert_input: {
					additionalProperties: false,
					type: "object",
					properties: {
						client: { type: ["string", "null"] },
						created_at: { type: ["string", "null"] },
						id: { type: ["string", "null"] },
						state: { type: ["string", "null"] },
						updated_at: { type: ["string", "null"] },
						vector: { type: ["string", "null"] },
					},
				},
			},
			required: ["crdt"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						hasura_insert_crdt_one: {
							type: "object",
							properties: { id: { type: "string" } },
							additionalProperties: false,
							required: ["id"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
};
export default jsonSchema;
